{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, getDocs, where, query } from \"firebase/firestore\"; //import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\n\nimport { ref, onUnmounted } from 'vue'; // Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB5H63Brfoe6WKs8t2v-5WXVP70c8X8hm4\",\n  authDomain: \"marselotech-web.firebaseapp.com\",\n  databaseURL: \"https://marselotech-web-default-rtdb.firebaseio.com\",\n  projectId: \"marselotech-web\",\n  storageBucket: \"marselotech-web.appspot.com\",\n  messagingSenderId: \"186580154211\",\n  appId: \"1:186580154211:web:429698f29b355d1587c556\",\n  measurementId: \"G-RTJMHKPJ0T\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nexport const createUser = async user => {\n  try {\n    const docRef = await addDoc(collection(db, \"users\"), user);\n    console.log(\"Document written with ID: \", docRef.id);\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\nexport const getUser = async id => {\n  const querySnapshot = await getDocs(collection(db, \"users\"));\n  querySnapshot.forEach(doc => {\n    console.log(`${doc.id} => ${doc.data()}`);\n  });\n};\nexport const useLoadUsers = () => {\n  const users = ref([]);\n  usersCollection.onSnapshot(snapshot => {\n    users.value = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  });\n  onUnmounted(close);\n  return users;\n};\n/*export const autenticatUser = async user => { \n\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, user.email, user.password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(user)\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        if(errorCode == \"auth/wrong-password\"){\n            console.log(\"Datos incorrectos\")\n        }else if(errorCode == \"auth/user-not-found\"){\n            console.log(\"El usuario introducido no existe\");\n        }\n        \n      });\n\n}*/\n\nexport const autenticatUser = async user => {\n  const q1 = query(collection(db, \"users\"), where(\"email\", \"==\", user.email));\n  const q2 = query(collection(db, \"users\"), where(\"robotid\", \"==\", user.robotid), where(\"email\", \"==\", user.email));\n  const querySnapshot1 = await getDocs(q1);\n  const querySnapshot2 = await getDocs(q2);\n\n  if (querySnapshot1.docs.length == 0) {\n    console.log(\"No existe un usuario con ese email.\");\n  } else {\n    if (querySnapshot2.docs.length == 0) {\n      console.log(\"Codigo de robot erroneo.\");\n    } else {\n      querySnapshot2.forEach(doc => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n      });\n    }\n  }\n};","map":{"version":3,"names":["initializeApp","getAnalytics","getFirestore","collection","addDoc","getDocs","where","query","ref","onUnmounted","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","db","createUser","user","docRef","console","log","id","e","error","getUser","querySnapshot","forEach","doc","data","useLoadUsers","users","usersCollection","onSnapshot","snapshot","value","docs","map","close","autenticatUser","q1","email","q2","robotid","querySnapshot1","querySnapshot2","length"],"sources":["/opt/lampp/htdocs/marselotech-web/marselotech-web/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { collection, addDoc, getDocs, where, query} from \"firebase/firestore\";\n//import { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport {ref, onUnmounted} from 'vue';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB5H63Brfoe6WKs8t2v-5WXVP70c8X8hm4\",\n    authDomain: \"marselotech-web.firebaseapp.com\",\n    databaseURL: \"https://marselotech-web-default-rtdb.firebaseio.com\",\n    projectId: \"marselotech-web\",\n    storageBucket: \"marselotech-web.appspot.com\",\n    messagingSenderId: \"186580154211\",\n    appId: \"1:186580154211:web:429698f29b355d1587c556\",\n    measurementId: \"G-RTJMHKPJ0T\"\n  };\n  \n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst db = getFirestore(app);\n\nexport const createUser = async user => {\n\n    try {\n        const docRef = await addDoc(collection(db, \"users\"), user);\n        console.log(\"Document written with ID: \", docRef.id);\n      } catch (e) {\n        console.error(\"Error adding document: \", e);\n      }\n\n}\n\nexport const getUser = async id => {\n\n    const querySnapshot = await getDocs(collection(db, \"users\"));\n    querySnapshot.forEach((doc) => {\n    console.log(`${doc.id} => ${doc.data()}`);\n    });\n\n}\n\nexport const useLoadUsers = () => {\n    const users = ref([])\n    usersCollection.onSnapshot (snapshot => {\n        users.value = snapshot.docs.map(doc => ({id: doc.id, ...doc.data()}))\n    })\n    onUnmounted(close);\n\n    return users;\n\n}\n\n/*export const autenticatUser = async user => { \n\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, user.email, user.password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(user)\n        // ...\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        if(errorCode == \"auth/wrong-password\"){\n            console.log(\"Datos incorrectos\")\n        }else if(errorCode == \"auth/user-not-found\"){\n            console.log(\"El usuario introducido no existe\");\n        }\n        \n      });\n\n}*/\n\nexport const autenticatUser = async user => { \n    const q1 = query(collection(db, \"users\"), where(\"email\", \"==\", user.email));\n    const q2 = query(collection(db,\"users\"), where(\"robotid\", \"==\", user.robotid), where(\"email\", \"==\", user.email));\n\n    const querySnapshot1 = await getDocs(q1);\n    const querySnapshot2 = await getDocs(q2);\n\n    if(querySnapshot1.docs.length == 0){\n\n        console.log(\"No existe un usuario con ese email.\");\n\n    }else{\n\n        if(querySnapshot2.docs.length == 0){\n            console.log(\"Codigo de robot erroneo.\");\n        }else{\n\n            querySnapshot2.forEach((doc) => {\n                // doc.data() is never undefined for query doc snapshots\n                console.log(doc.id, \" => \", doc.data());\n            });\n            \n        }  \n\n    }\n\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}