{"ast":null,"code":"const data = {\n  // ros connection\n  ros: null,\n  rosbridge_address: 'ws://127.0.0.1:9090/',\n  connected: false,\n  // service information\n  service_busy: false,\n  service_response: ''\n};\nexport const connect = () => {\n  console.log(\"Clic en connect\");\n  data.ros = new ROSLIB.Ros({\n    url: data.rosbridge_address\n  });\n  let topic = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/odom',\n    messageType: 'nav_msgs/msg/Odometry'\n  });\n  topic.subscribe(message => {\n    data.position = message.pose.pose.position; //document.getElementById(\"pos_x\").innerHTML = data.position.x.toFixed(2)\n    //document.getElementById(\"pos_y\").innerHTML = data.position.y.toFixed(2)\n  });\n  let topic3 = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/image',\n    messageType: 'sensor_msgs/msg/Image'\n  });\n  topic3.subscribe(); // Define callbacks\n\n  data.ros.on(\"connection\", () => {\n    data.connected = true;\n    console.log(\"Conexion con ROSBridge correcta\");\n    document.getElementById(\"robot_conectado\").innerHTML = \"Robot conectado\";\n    setCamera();\n  });\n  data.ros.on(\"error\", error => {\n    console.log(\"Se ha producido algun error mientras se intentaba realizar la conexion\");\n    console.log(error);\n  });\n  data.ros.on(\"close\", () => {\n    data.connected = false;\n    console.log(\"Conexion con ROSBridge cerrada\");\n  });\n};\nexport const disconnect = () => {\n  data.ros.close();\n  data.connected = false;\n  console.log('Clic en botón de desconexión');\n  document.getElementById(\"robot_conectado\").innerHTML = \"Robot desconctado\"; // quitamos camara\n\n  document.getElementById(\"divCamera\").innerHTML = \"\";\n};\nexport const move = () => {\n  let topic = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/cmd_vel',\n    messageType: 'geometry_msgs/msg/Twist'\n  });\n  let message = new ROSLIB.Message({\n    linear: {\n      x: 0.1,\n      y: 0,\n      z: 0\n    },\n    angular: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  });\n  topic.publish(message);\n};\nexport const move_detras = () => {\n  let topic = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/cmd_vel',\n    messageType: 'geometry_msgs/msg/Twist'\n  });\n  let message = new ROSLIB.Message({\n    linear: {\n      x: -0.1,\n      y: 0,\n      z: 0\n    },\n    angular: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  });\n  topic.publish(message);\n};\nexport const move_izquierda = () => {\n  let topic = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/cmd_vel',\n    messageType: 'geometry_msgs/msg/Twist'\n  });\n  let message = new ROSLIB.Message({\n    linear: {\n      x: 0.1,\n      y: 0,\n      z: 0.1\n    },\n    angular: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  });\n  topic.publish(message);\n};\nexport const move_derecha = () => {\n  let topic = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/cmd_vel',\n    messageType: 'geometry_msgs/msg/Twist'\n  });\n  let message = new ROSLIB.Message({\n    linear: {\n      x: 0.1,\n      y: 0,\n      z: -0.1\n    },\n    angular: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  });\n  topic.publish(message);\n};\nexport const stop = () => {\n  let topic = new ROSLIB.Topic({\n    ros: data.ros,\n    name: '/cmd_vel',\n    messageType: 'geometry_msgs/msg/Twist'\n  });\n  let message = new ROSLIB.Message({\n    linear: {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n    angular: {\n      x: 0,\n      y: 0,\n      z: 0\n    }\n  });\n  topic.publish(message);\n};\nexport const call_delante_service = valor => {\n  console.log(\"Estoy dentro de call delaten service \" + valor);\n  data.service_busy = true;\n  data.service_response = ''; //definimos los datos del servicio\n\n  let service = new ROSLIB.Service({\n    ros: data.ros,\n    name: '/movement',\n    serviceType: 'custom_interface/srv/MyMoveMsg'\n  });\n  let request = new ROSLIB.ServiceRequest({\n    move: valor\n  });\n  service.callService(request, result => {\n    data.service_busy = false;\n    data.service_response = JSON.stringify(result);\n  }, error => {\n    data.service_busy = false;\n    console.error(error);\n  });\n};\nexport const setCamera = () => {\n  console.log(\"entra fucion serCamara()\");\n  let dengue = new MJPEGCANVAS.Viewer({\n    divID: \"divCamera\",\n    //elemento del html donde mostraremos la cámara\n    host: \"ws:127.0.0.1\",\n    //dirección del servidor de vídeo\n    port: \"9090\",\n    width: 320,\n    //no pongas un tamaño mucho mayor porque puede dar error\n    height: 240,\n    topic: \"/image\",\n    ssl: false\n  });\n  console.log(dengue);\n};","map":{"version":3,"names":["data","ros","rosbridge_address","connected","service_busy","service_response","connect","console","log","ROSLIB","Ros","url","topic","Topic","name","messageType","subscribe","message","position","pose","topic3","on","document","getElementById","innerHTML","setCamera","error","disconnect","close","move","Message","linear","x","y","z","angular","publish","move_detras","move_izquierda","move_derecha","stop","call_delante_service","valor","service","Service","serviceType","request","ServiceRequest","callService","result","JSON","stringify","dengue","MJPEGCANVAS","Viewer","divID","host","port","width","height","ssl"],"sources":["/opt/lampp/htdocs/marselotech-web/marselotech-web/src/robot.js"],"sourcesContent":["const data = {\n    // ros connection\n    ros: null,\n    rosbridge_address: 'ws://127.0.0.1:9090/',\n    connected: false,\n    // service information\n    service_busy: false,\n    service_response: ''\n}\n\nexport const  connect = () => {\n    console.log(\"Clic en connect\")\n\n    data.ros = new ROSLIB.Ros({\n        url: data.rosbridge_address\n\n    })\n\n    let topic = new ROSLIB.Topic({\n        ros: data.ros,\n        name: '/odom',\n        messageType: 'nav_msgs/msg/Odometry'\n    })\n    topic.subscribe((message) => {\n        data.position = message.pose.pose.position\n        //document.getElementById(\"pos_x\").innerHTML = data.position.x.toFixed(2)\n        //document.getElementById(\"pos_y\").innerHTML = data.position.y.toFixed(2)\n    })\n    let topic3 = new ROSLIB.Topic({\n        ros: data.ros,\n        name: '/image',\n        messageType: 'sensor_msgs/msg/Image'\n    })\n    topic3.subscribe();\n\n    // Define callbacks\n    data.ros.on(\"connection\", () => {\n        data.connected = true\n        console.log(\"Conexion con ROSBridge correcta\")\n        document.getElementById(\"robot_conectado\").innerHTML=\"Robot conectado\"\n        setCamera();\n    })\n    data.ros.on(\"error\", (error) => {\n        console.log(\"Se ha producido algun error mientras se intentaba realizar la conexion\")\n        console.log(error)\n    })\n    data.ros.on(\"close\", () => {\n        data.connected = false\n        console.log(\"Conexion con ROSBridge cerrada\")\n    })\n}\n\nexport const disconnect= () => {\n    data.ros.close()\n    data.connected = false\n    console.log('Clic en botón de desconexión')\n    document.getElementById(\"robot_conectado\").innerHTML=\"Robot desconctado\"\n\n    // quitamos camara\n    document.getElementById(\"divCamera\").innerHTML = \"\"\n}\n\nexport const move = () => {\n\n        let topic = new ROSLIB.Topic({\n            ros: data.ros,\n            name: '/cmd_vel',\n            messageType: 'geometry_msgs/msg/Twist'\n        })\n\n        let message = new ROSLIB.Message({\n            linear: {x: 0.1, y: 0, z: 0, },\n            angular: {x: 0, y: 0, z: 0},\n        })\n\n        topic.publish(message)\n\n}\n\nexport const move_detras = () => {\n\n        let topic = new ROSLIB.Topic({\n            ros: data.ros,\n            name: '/cmd_vel',\n            messageType: 'geometry_msgs/msg/Twist'\n        })\n\n        let message = new ROSLIB.Message({\n            linear: {x: -0.1, y: 0, z: 0, },\n            angular: {x: 0, y: 0, z: 0},\n        })\n\n        topic.publish(message)\n}\n\nexport const move_izquierda = () => {\n\n    let topic = new ROSLIB.Topic({\n        ros: data.ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/msg/Twist'\n    })\n\n    let message = new ROSLIB.Message({\n        linear: {x: 0.1, y: 0, z: 0.1, },\n        angular: {x: 0, y: 0, z: 0},\n    })\n\n    topic.publish(message)\n\n}\n\nexport const move_derecha = () => {\n\n    let topic = new ROSLIB.Topic({\n        ros: data.ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/msg/Twist'\n    })\n\n    let message = new ROSLIB.Message({\n        linear: {x: 0.1, y: 0, z: -0.1, },\n        angular: {x: 0, y: 0, z: 0},\n    })\n\n    topic.publish(message)\n\n}\n\nexport const stop = () => {\n    let topic = new ROSLIB.Topic({\n        ros: data.ros,\n        name: '/cmd_vel',\n        messageType: 'geometry_msgs/msg/Twist'\n    })\n    let message = new ROSLIB.Message({\n        linear: {x: 0, y: 0, z: 0, },\n        angular: {x: 0, y: 0, z: 0, },\n    })\n    topic.publish(message)\n}\n\nexport const call_delante_service = (valor) =>{\n\n    console.log(\"Estoy dentro de call delaten service \"+valor)\n    data.service_busy = true\n    data.service_response = ''\n\n    //definimos los datos del servicio\n    let service = new ROSLIB.Service({\n        ros: data.ros,\n        name: '/movement',\n        serviceType: 'custom_interface/srv/MyMoveMsg'\n    })\n\n    let request = new ROSLIB.ServiceRequest({\n        move: valor\n    })\n\n    service.callService(request, (result) => {\n        data.service_busy = false\n        data.service_response = JSON.stringify(result)\n    }, (error) => {\n        data.service_busy = false\n        console.error(error)\n    })\n}\n\nexport const setCamera = () => {\n    console.log(\"entra fucion serCamara()\")\n\n    let dengue = new MJPEGCANVAS.Viewer({\n        divID: \"divCamera\", //elemento del html donde mostraremos la cámara\n        host: \"ws:127.0.0.1\", //dirección del servidor de vídeo\n        port: \"9090\",\n        width: 320, //no pongas un tamaño mucho mayor porque puede dar error\n        height: 240,\n        topic: \"/image\",\n        ssl: false,\n    })\n\n    console.log(dengue)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}